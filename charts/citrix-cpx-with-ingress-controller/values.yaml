# Default values for citrix-cpx-with-ingress-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# cpximage contains information needed to fetch CPX image
image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-52.24
pullPolicy: Always
# Number of replicas
replicas: 1
# cicimage contains information needed to fetch CIC image
cic:
  image: quay.io/citrix/citrix-k8s-ingress-controller:1.8.19
  pullPolicy: Always
  required: true
# openshift is set to true if charts are being deployed in OpenShift environment.
openshift: false
# lsIP contains the Citrix Application Delivery Management (ADM) IP address to license Citrix ADC CPX.
lsIP:
# Specify the Citrix ADM port in lsPort only if you have changed it.
lsPort:
# nsNamespace is the prefix for the resources on the Citrix ADC
nsNamespace:
#loginFileName is secret file for Citrix ADC CPX login
loginFileName: cpxlogin
# Specify the platform license here.
platform:
# Specify the bandwidth (to checkout from ADM)
bandwidth: 
# license is used accept the terms of the Citrix license
license:
  accept: no
# ingressClass is the  name of the Ingress Class
ingressClass:
# logLevel is to set level of CIC Logs
logLevel: DEBUG
# Default SSL certificate
defaultSSLCert:
# Elasticsearch or Kafka or Zipkin endpoint for Citrix observability exporter
logProxy:
# Set to ON to enables HTTP2 for Citrix ADC service group configurations
http2ServerSide: "OFF"
# exporter conatins information of prometheus-exporter
exporter:
  required: false
  image: quay.io/citrix/citrix-adc-metrics-exporter:1.4.3
  pullPolicy: Always
  ports:
    containerPort: 8888
# Additional configuration
cpxConfig:
  configmap:
    useExisting: false      # Should an existing configmap containing cpx.conf be used?
    mount: false            # Should the CPX container mount the configmap containing cpx.conf?
    name: cpx-configuration # Name of the configmap containing cpx.conf
  # Use the following operator to create the dhkey: https://github.com/XenitAB/dhkey-operator
  dhkeySecret:
    useExisting: false      # Should an existing secret containing the dhkey be used?
    mount: false            # Should the secret containing the dhkey be mounted to the CPX container?
    secretName: cpx-dhkey   # Name of the secret containing the dhkey
    dhkeyName: dhKey        # Name of the key in the Secret containing the dh key
    dhkey: ""               # Should not be used, better to creat it outside of helm. Should be the dhkey base 64 encoded
# CRD Installation
crds:
# If false, CustomResourceDefinitions  will not be installed.
  install: true
# if set to true, then CustomResourceDefinitions will not be deleted during helm delete. This way, CustomResourceObjects will not be deleted from the database.
  retainOnDelete: false
# Service configuration
service:
  externalTrafficPolicy: Cluster # Cluster | Local
  type: NodePort                 # ClusterIP | NodePort | LoadBalancer
  sessionAffinity: ClientIP      # None | ClientIP